name: Rust Release

on:
  push:
    tags:
      - "v*" # Trigger on new tags starting with "v"
    branches:
      - "main"

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for changelog generation

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Generate Changelog
        id: changelog
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            echo "No previous tag found, assuming initial release."
            CHANGELOG=$(git log --pretty=format:"- %s")
          else
            echo "LAST_TAG=$LAST_TAG" >> $GITHUB_ENV
            CHANGELOG=$(git log $LAST_TAG..HEAD --pretty=format:"- %s")
          fi
          echo "changelog=${CHANGELOG}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Changes since last release:
            ${{ steps.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}

      - name: Build Linux Release
        run: |
          cross build --release --target x86_64-unknown-linux-gnu
          cross build --release --target aarch64-unknown-linux-gnu
          mkdir -p dist/linux
          cp target/x86_64-unknown-linux-gnu/release/joplin-gen dist/linux/joplin-gen-x86_64-linux
          cp target/aarch64-unknown-linux-gnu/release/joplin-gen dist/linux/joplin-gen-aarch64-linux

      - name: Build Windows Release
        run: |
          rustup target add x86_64-pc-windows-gnu
          sudo apt-get update && sudo apt-get install -y mingw-w64
          cargo build --release --target x86_64-pc-windows-gnu
          mkdir -p dist/windows
          cp target/x86_64-pc-windows-gnu/release/joplin-gen.exe dist/windows/joplin-gen-x86_64-windows.exe

      - name: Upload Linux and Windows Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/linux/*
            dist/windows/*
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}

  build_macos:
    name: Build MacOS Release
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Build MacOS Release
        run: |
          rustup target add x86_64-apple-darwin aarch64-apple-darwin
          cargo build --release --target x86_64-apple-darwin
          cargo build --release --target aarch64-apple-darwin
          mkdir -p dist/macos
          cp target/x86_64-apple-darwin/release/joplin-gen dist/macos/joplin-gen-x86_64-apple-darwin
          cp target/aarch64-apple-darwin/release/joplin-gen dist/macos/joplin-gen-aarch64-apple-darwin

      - name: Upload MacOS Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/macos/*
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}